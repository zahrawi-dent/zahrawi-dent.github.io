---
// ArticleCard.astro
import type { CollectionEntry } from "astro:content";
import { formatDate, getReadingTime } from "../utils";

interface Props {
  post: CollectionEntry<"blog">;
  featured?: boolean;
}

const { post, featured = false } = Astro.props;
const data = post.data;
const readingTime = post.body ? getReadingTime(post.body) : 0;

// Category color mapping
const categoryColors = {
  Technology: "blue",
  Health: "green",
  Finance: "purple",
  Lifestyle: "amber",
  Travel: "rose",
  // Add more categories as needed
  default: "rich-black",
};

const categoryColor = "blue";
//const categoryColor = data.category && categoryColors[data.category] ? categoryColors[data.category] : categoryColors.default;
---

<article
  class={`group flex flex-col rounded-xl shadow-md overflow-hidden transition-all duration-300 hover:shadow-xl ${featured ? "md:col-span-2 lg:flex-row" : ""}`}
>
  <div
    class={`flex-1 bg-white dark:bg-gray-800 p-6 flex flex-col justify-between ${featured ? "lg:w-1/2" : ""}`}
  >
    <div class="flex-1">
      <!-- Category and tags -->
      <div class="mb-3 flex flex-wrap items-center gap-2">
        {
          data.tags && data.tags.length > 0 && (
            <div class="flex flex-wrap gap-2">
              {data.tags.slice(0, 3).map((tag: string) => (
                <a
                  href={`/tags/${tag.toLowerCase()}`}
                  class="rounded bg-gray-100 px-2.5 py-0.5 text-xs font-medium text-gray-800 transition-colors hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600"
                >
                  #{tag}
                </a>
              ))}
              {data.tags.length > 3 && (
                <span class="px-2 py-0.5 text-xs font-medium text-gray-500 dark:text-gray-400">
                  +{data.tags.length - 3} more
                </span>
              )}
            </div>
          )
        }
      </div>

      <!-- Title and description -->
      <a href={`/${post.id}`} class="group-hover:text-primary-600">
        <h3
          class="group-hover:text-primary-600 mb-2 text-xl font-bold text-gray-900 transition-colors dark:text-white"
        >
          {data.title}
        </h3>
        <p class="line-clamp-3 text-gray-600 dark:text-gray-300">
          {data.description}
        </p>
      </a>
    </div>

    <!-- Post metadata -->
    <div class="mt-4 flex items-center justify-between">
      <div class="flex items-center">
        <div
          class="flex items-center space-x-1 text-xs text-gray-500 dark:text-gray-400"
        >
          <span aria-hidden="true">&middot;</span>
          <span>{readingTime} min read</span>
        </div>
      </div>

      <button
        aria-label="Bookmark this article"
        class="rounded-full p-1.5 text-gray-500 transition-colors hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="18"
          height="18"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path d="m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z"></path>
        </svg>
      </button>
    </div>
  </div>
</article>
