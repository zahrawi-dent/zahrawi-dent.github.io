---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import ArticleCard from "../../components/ArticleCard.astro";
import Pagination from "../../components/Pagination.astro";
import BreadCrumbs from "../../components/BreadCrumbs.astro";
import { type Page as PageType } from "astro";

const { category } = Astro.params;

const title = "Zahrawi | Modern Dentistry Blog";
const description = "Modern Dentistry Blog";
type Post = CollectionEntry<"blog">;

export async function getStaticPaths({ paginate }) {
  // Get all unique categories from blog posts
  const posts = await getCollection("blog");
  const categories = [...new Set(posts.map((post) => post.data.category))];
  
  // For each category, create paginated routes
  return categories.flatMap((category) => {
    // Filter posts by current category
    const filteredPosts = posts.filter((post) => post.data.category === category);
    
    // Create paginated routes for this category
    return paginate(filteredPosts, {
      params: { category },
      pageSize: 6,
      props: { category },
    });
  });
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props as { page: PageType<Post> };
const currentPage = parseInt(Astro.params.page as string);

// Redirect page 1 to /blog
if (currentPage === 1) {
  return Astro.redirect("/blog");
}

const breadcrumbData = [
  { label: 'Home', href: '/' },
  { label: category.charAt(0).toUpperCase() + category.slice(1), href: `/${category}` },
  { label: `Page ${currentPage}`, href: `/${category}/${currentPage}` },
];
---

<BaseLayout title={title} description={description}>
  <BreadCrumbs crumbs={breadcrumbData} />
  <div class="mx-auto mt-12 grid max-w-lg gap-5 lg:max-w-none lg:grid-cols-3">
    {page.data.map((post) => <ArticleCard post={post} baseUrl="/${category}"/>)}
  </div>
  <Pagination
    currentPage={page.currentPage}
    totalPages={page.lastPage}
      prevUrl={page.url.prev ? page.url.prev : `/${category}/`}
    nextUrl={page.url.next}
  />
</BaseLayout>
